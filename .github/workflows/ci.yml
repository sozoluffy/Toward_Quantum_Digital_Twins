# .github/workflows/ci.yml

name: CI

on:
  push:
    branches:
      - main # Or your default branch name like 'master'
  pull_request:
    branches:
      - main # Or your default branch name like 'master'

jobs:
  build-and-test:
    runs-on: ubuntu-latest # Use a recent Ubuntu version

    steps:
    - name: Checkout code
      uses: actions/checkout@v4 # Use v4 for checking out code

    - name: Set up Python
      uses: actions/setup-python@v5 # Use v5 for setting up Python
      with:
        # Use a compatible Python version. Python 3.8+ is required for Qiskit >= 1.0
        python-version: '3.x' # This will pick the latest 3.x available, typically 3.11 or 3.12

    # --- Add steps to create and activate a virtual environment ---
    - name: Create Virtual Environment
      run: python -m venv .venv

    - name: Activate Virtual Environment
      # This step makes the virtual environment active for subsequent run steps
      # The syntax depends on the shell, but this works for bash which is common on ubuntu-latest
      run: |
        source .venv/bin/activate
        # The 'run' block executes commands in a new shell.
        # To ensure subsequent steps use the activated venv, we need to set up the shell.
        # This is handled by the 'shell' property or by repeating activation if needed,
        # but 'actions/setup-python' and standard 'run' blocks often manage this.
        # Let's rely on the standard setup first.

    # --- End Virtual Environment Setup ---


    - name: Install dependencies
      # Now install dependencies INTO the activated virtual environment
      run: |
        # Ensure pip is up-to-date within the venv
        python -m pip install --upgrade pip
        # Install everything from your requirements file into the venv
        pip install -r requirements.txt
      # Ensure this step runs within the activated shell if needed,
      # but actions/setup-python often configures the shell correctly.


    # Install your package itself into the virtual environment
    - name: Install package
      run: |
        # Ensure the venv is active (redundant but safe check)
        source .venv/bin/activate
        # Install the package in editable mode (optional, but common for testing)
        pip install .

    - name: Run tests
      # Now run tests using pytest from within the virtual environment
      run: |
        # Ensure the venv is active (redundant but safe check)
        source .venv/bin/activate
        # Use python -m pytest to run your test suite
        python -m pytest

    # Optional: Add linting or formatting checks (uncomment if you want them)
    # These would also need to be installed into the venv
    # - name: Run linter (flake8)
    #   run: |
    #     source .venv/bin/activate # Activate venv
    #     # Install flake8 if not in requirements.txt
    #     # pip install flake8
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics

